// node 概念
// node 是什么?
// 不是一门语言
// 核心 就是一个让js可以运行在服务端的一个运行时环境(我们可以使用js来实现服务端或工具)

// js 由几部分组成 (DOM BOM) ECMASCRIPT

// node中只能使用ECMASCRIPT语法本身 (node提供了内置模块可以帮助我们做系统级的操作 fs http...) + npm包

// 使用场景:
// 服务端
// 中间层  数据格式化 跨域问题(跨域是浏览器的同源策略)
// SSR首屏渲染(nuxt)
// 工具(打包工具webpack rollup) 可以通过node来实现各种工具

// node 做服务端没有优势可言  刚开始为了和web密切结合
// 主线程是单线程的

// java 多线程每次请求都开一个线程(线程池)  请求过多的话 浪费内存  锁的问题

// node中没有锁  就一个主线程 (内存消耗少) (如果主线程工作量会出现线程阻塞) 通过时间片切换感觉是并发做事 切换时间片也会有性能消耗
// 高并发就是单线程异步

// node不适合CPU密集型(加密 压缩)
// 适合I/O密集型(文件读写)
// node可以开子进程  多个进程可以充分利用CPU

// 异步 阻塞
// node 是异步非阻塞  java同步阻塞
// 阻塞和非阻塞指的是调用方
// 异步和同步指的是被调用方
